plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'maven-publish'
}


group 'com.jasontam'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8


sourceSets {
    main {
        java {
            srcDirs = ['src']
            exclude 'com/jasontam/learngradlejavaproject/test/**'
        }
    }
    test {
        java {
            srcDirs = ['test', 'src/com/jasontam/learngradlejavaproject/test']
        }
    }
}


repositories {
    mavenCentral()
    maven {
        url "/Users/JasonTam/.m2/repository"
    }
}
publishing {
    publications {
        jasonLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'jasonLocalMaven'
            url "/Users/JasonTam/.m2/repository" }
    }
}
def loggingConfigurationFile = 'logging.properties'

test {

    systemProperty 'java.util.logging.config.file', "${loggingConfigurationFile}"
}

tasks.withType(JavaExec) {
    systemProperty 'java.util.logging.config.file', "${loggingConfigurationFile}"
}

dependencies {
    def junitVersion = 'junit:junit:4.12'

    testCompile "${junitVersion}"
    
    //This is needed in case you are just compiling the test tasks
    compile "${junitVersion}"
}


def mainFunction = "${group}.learngradlejavaproject.mainapplication.MainApplication"


mainClassName = "$mainFunction"

jar {
    manifest {
        attributes "Main-Class": "$mainFunction"
    }
}

task Task1 {
    //println "main class is $mainFunction"
    def my_files = project.fileTree("./").include "**/*.log.txt.*"
    for (f in my_files) {
        println f
    }
    

}

task removelogs {

    delete fileTree("~/").matching {
        include "**/*.log.txt.*"
    }
}
